language: node_js

node_js:
  - 10
  - 12
  - 14

#env:
#  global:
#   - secure: bKjyTiUGN568Ryr+JIqs2DxBnSE9EKQlf09wHAlbeonTQYm5u7PfkBryizddquJX3lXTfiIdXcsMM17Gr9osHSN3SQxCTYnJgHOZ+4eUmx62nv9G/I1Xt2DpR4vtfIcMjJ3cfbpHDgP6dwB3qysv5JDSb6Xhn++vt7O1ekTJhOE=
#   - secure: hh5aZtl3nrDiS7tTk6PgZtAc4p3/48j6Ob3O/dhfxyMHXD8JmmU7UxiAs3RucPrcANw9tsLnqB9Z2ETTax9G7Gkiii6UmG8+V6+KTWYWouG4deLFn+2kUc14f3MtJOnuEVwfwfRFUAM6P03PoWTxoOzFxkRefO8kY9wXdQfGmMc=

install:
# ensure source install works
- npm install --build-from-source
# test our module
- node index.js

before_script:
# unpublish and then publish again
- ./node_modules/.bin/node-pre-gyp unpublish package publish

script:
# if publishing, test installing from remote
- INSTALL_RESULT=0
- INSTALL_RESULT=$(npm install --fallback-to-build=false > /dev/null)$? || true;
# if install returned non zero (errored) then we first unpublish and then call false so travis will bail at this line
- if [[ $INSTALL_RESULT != 0 ]]; then echo "returned $INSTALL_RESULT";false; fi
# If success then we arrive here so lets clean up
- ./node_modules/.bin/node-pre-gyp clean

#after_success:
# if success then query and display all published binaries
#- node-pre-gyp info
